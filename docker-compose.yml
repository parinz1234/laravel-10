# version: '3.8'

services:
  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: my-laravel-nginx
    restart: unless-stopped
    ports:
      # Expose port 8080 on the host machine
      - '8080:80'
    volumes:
      # Sync the application code from the current directory
      - ./laravel:/var/www/html
      # Mount the Nginx configuration file
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel-network

  # PHP Service (named 'app')
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: my-laravel-app
    restart: unless-stopped
    volumes:
      # Sync the application code from the current directory
      - ./laravel:/var/www/html
    networks:
      - laravel-network

  # Elasticsearch
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: myapp-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - laravel-network

  # Kibana (Elasticsearch UI)
  kibana:
    image: kibana:8.11.0
    container_name: myapp-kibana
    restart: unless-stopped
    ports:
      - '5601:5601'
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      ELASTICSEARCH_USERNAME: ''
      ELASTICSEARCH_PASSWORD: ''
      XPACK_SECURITY_ENABLED: 'false'
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: 'fhjskloppd678ehkdfdlliverpoolfcr'
    depends_on:
      - elasticsearch
    networks:
      - laravel-network

  # Filebeat (Log Shipper)
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    container_name: myapp-filebeat
    restart: unless-stopped
    user: root
    command: filebeat -e -strict.perms=false
    volumes:
      # Read Laravel logs (read-only)
      - ./laravel/storage/logs:/var/log/laravel:ro
      # Mount Filebeat configuration
      - ./docker/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      # Filebeat data directory
      - filebeat-data:/usr/share/filebeat/data
    depends_on:
      - elasticsearch
    networks:
      - laravel-network

volumes:
  elasticsearch-data:
    driver: local
  filebeat-data:
    driver: local
# Define the shared network
networks:
  laravel-network:
    driver: bridge
